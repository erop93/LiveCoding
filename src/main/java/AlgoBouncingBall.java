
public class AlgoBouncingBall {
    public static void main(String[] args) {
        System.out.println(bouncingBall(3, 0.66, 1.5));
    }

    private static int bouncingBall(double h, double bounce, double window) {
        // Отсекаем условия невыполнения
        if (h <= 0 || bounce < 0 || bounce > 1 || window > h) {
            return -1;
        }

        int count = 0; // Счетчик сколько раз мать увидит мяч
        while (h > window) { // Пока высота отскока мяча больше высоты окна
            count++; // увеличиваем счетчик на 1
            h = h * bounce; // задаем новую высоту с учетом коэффициента отскока
            if (h > window) { // если новая высота всё ещё выше окна
                count++; // снова увеличиваем счетчик на 1
            }
        }
        return count;
    }

    /**
     * Ребенок играет с мячом на n-м этаже высотного здания. Высота этого этажа над уровнем земли h известна.
     * Он выбрасывает мяч из окна. Мяч отскакивает (например) на две трети своей высоты (отскок 0,66).
     * Его мать смотрит в окно на высоте 1,5 метра от земли.
     * Сколько раз мать увидит, как мяч пролетает перед ее окном (в том числе когда он падает и подпрыгивает)?
     * <p›
     * Для успешного эксперимента должны быть соблюдены три условия:
     * <p>
     * Плавающий параметр «h» в метрах должен быть больше 0.
     * Плавающий параметр «bounce» (отскок) должен быть больше 0 и меньше 1.
     * Плавающий параметр «window» (окно) должен быть меньше h.
     * <p>
     * Если все три условия выше выполнены, верните положительное целое число, в противном случае верните -1.
     * <p>
     * Примечание:
     * Мяч можно увидеть только в том случае, если высота отскакивающего мяча строго больше параметра окна.
     * <p>
     * Примеры:
     * - h = 3, bounce = 0.66, window = 1.5, result is 3
     * - h = 3, bounce = 1, window = 1.5, result is -1
     */
}
