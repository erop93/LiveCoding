import java.util.Stack;

public class AlgoBrackets {
    public static void main(String[] args) {
        String s = "[]";
        System.out.println(isValid(s));
    }

    public static boolean isValid(String s) {
        Stack<Character> stack = new Stack<>(); // Создаём стек для хранения открывающих скобок

        for (char c : s.toCharArray()) { // Проходим по каждому символу строки
            // Если символ — открывающая скобка, кладём её в стек
            if (c == '(' || c == '{' || c == '[') {
                stack.push(c);
            }
            // Если символ — закрывающая скобка
            else if (c == ')' || c == '}' || c == ']') {
                // Если стек пуст, но встретилась закрывающая скобка — ошибка
                if (stack.isEmpty()) {
                    return false;
                }

                // Берем верхнюю скобку из стека
                char open = stack.pop();
                // Проверяем соответствие открывающей и закрывающей
                if ((c == ')' && open != '(') ||
                        (c == '}' && open != '{') ||
                        (c == ']' && open != '[')) {
                    return false; // Если не совпадают — скобочная ошибка
                }
            }
        }
        // Если после обработки остались незакрытые скобки — тоже ошибка
        return  stack.isEmpty();
    }
}

// Дана строка, состоящая из символов (,),{,},[,]
// Корректной считается строка, если каждая открытая скобка закрывается закрывающей скобкой
// того же типа в правильном порядке
// Определить, является ли строка корректной